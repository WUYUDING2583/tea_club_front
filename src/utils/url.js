const HOME = "http://localhost:8080"

export default {
    adminLogin: () => "/mock/adminLogin.json",
    adminForget: () => "/mock/adminForget.json",
    adminFetchSiderContent: () => "/mock/adminFetchSiderContent.json",
    companyInfo: () =>
        HOME + "/company",
    // "/mock/companyInfo.json",
    alterCompanyInfo: () =>
        HOME + "/company",
    //"/mock/companyInfo.json",
    fetchShop: (uid) =>
        HOME + `/shop/${uid}`,
    // "/mock/shopInfo.json",
    fetchShops: () =>
        HOME + "/shops",
    // "/mock/shopList.json",
    removeShop: (uid) => HOME + `/shop/${uid}`,
    //"/mock/alterBoxInfo.json",
    fetchClerks: () => HOME + `/clerks`,
    // "/mock/allClerks.json",
    alterBoxInfo: () => "/mock/alterBoxInfo.json",
    removeShopBox: (uid) => HOME + `/shopBox/${uid}`,
    // "/mock/alterBoxInfo.json",
    addBoxInfo: () => HOME + "/shopBox",
    // "/mock/addBoxInfo.json",
    alterShopInfo: () => "/mock/alterBoxInfo.json",
    addShop: () => HOME + "/shop",
    // "/mock/addShop.json",
    fetchAllAuthority: () => "/mock/allAuthority.json",
    fetchPositions: () => HOME + "/positions",
    // "/mock/allPosition.json",
    alterClerkInfo: () => "/mock/alterClerkInfo.json",
    removeClerk: (uid) => HOME + `/clerk/${uid}`,
    // "/mock/alterClerkInfo.json",
    addClerk: () => HOME + "/clerk",
    // "/mock/addClerk.json",
    fetchProductTypes: () => HOME + "/productTypes",
    //  "/mock/productType.json",
    fetchProductDetailByType: () => "/mock/productDetailByType.json",
    fetchCustomerTypes: () => HOME + "/customerTypes",
    // "/mock/customerType.json",
    fetchActivities: () => HOME + "/activities",
    // "/mock/activities.json",
    terminalActivity: (uid) => HOME + `/activity/${uid}`,
    // "/mock/alterBoxInfo.json",
    addActivity: () => HOME + "/activity",
    //"/mock/activities.json",
    addProductType: () => HOME + "/productType",
    // "/mock/productType.json",
    addProduct: () => HOME + "/product",
    // "/mock/productDetailByType.json",
    terminalProductSale: () => "/mock/productDetailByType.json",
    alterProductInfo: () => "/mock/productDetailByType.json",
    fetchEnterpriseCustomerApplication: (isFetchAll) => `${HOME}/enterpriseCustomerApplications/${isFetchAll}`,
    // "/mock/enterpriseCustomerApplication.json",
    startApplicationCheck: (uid) =>`${HOME}/startEnterpriseCustomerApplication/${uid}`,
    //  "/mock/enterpriseCustomerApplication.json",
    approveApplication: (uid) => `${HOME}/approveEnterpriseCustomerApplication/${uid}`,
    // "/mock/enterpriseCustomerApplication.json",
    rejectApplication:  (uid) => `${HOME}/rejectEnterpriseCustomerApplication/${uid}`,
    fetchCustomers: () => `${HOME}/customers`,
    // "/mock/customers.json",
    setSuperVIP: (uid) => `${HOME}/setSupervip/${uid}`,
    // "/mock/customers.json",
    fetchOrdersByCustomer: (uid,timeRange) => `${HOME}/ordersByCustomer/${uid}/${timeRange.startDate}/${timeRange.endDate}`,
    // "/mock/ordersByCustomer.json",
    fetchCustomerById: () => "/mock/customer.json",
    deleteOrder: () => "/mock/ordersByCustomer.json",
    deleteOrderByBatch: () => "/mock/ordersByCustomer.json",
    fetchOrderById: () => "/mock/order.json",
    uploadPhoto: () => HOME + "/savephoto",
    fetchShopBoxes: () => HOME + "/shopBoxes",
    fetchShopBox: (uid) => HOME + `/shopBox/${uid}`,
    updateShopBox: () => HOME + `/shopBox`,
    updateShop: () => HOME + "/shop",
    fetchClerk: (uid) => HOME + `/clerk/${uid}`,
    updateClerk: () => HOME + "/clerk",
    fetchActivitiesNameDesc: () => HOME + "/activitiesNameDesc",
    fetchActivityRuleTypes: () => HOME + "/activityRuleTypes",
    fetchProductsName: () => HOME + `/productsName`,
    fetchActivity: (uid) => HOME + `/activity/${uid}`,
    updateActivity: () => HOME + "/activity",
    fetchProducts: () => HOME + "/products",
    terminalProduct: (uid) => HOME + `/product/${uid}`,
    fetchProduct: (uid) => `${HOME}/product/${uid}`,
    updateProduct: () => `${HOME}/product`,
    fetchApplication:(uid)=>`${HOME}/enterpriseCustomerApplication/${uid}`,
    fetchUncompleteOrders:()=>`${HOME}/uncompleteOrders`,
    fetchOrders:(status,timeRange)=>`${HOME}/orders/${status}/${timeRange.startDate}/${timeRange.endDate}`,
    fetchOrder:(uid)=>`${HOME}/order/${uid}`,
    updateOrderStatus:(status)=>`${HOME}/order${status}`,
}